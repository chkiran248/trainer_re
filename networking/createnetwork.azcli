 # create the Azure-VNet-1 virtual network and the Services subnet

az network vnet create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --name Azure-VNet-1 --address-prefix 10.0.0.0/16 --subnet-name Services --subnet-prefix 10.0.0.0/24

# add the GatewaySubnet subnet to Azure-VNet-1

az network vnet subnet create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --vnet-name Azure-VNet-1 --address-prefix 10.0.255.0/27 --name GatewaySubnet

# create the LNG-HQ-Network local network gateway

az network local-gateway create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --gateway-ip-address 94.0.252.160 --name LNG-HQ-Network --local-address-prefixes 172.16.0.0/16

# create the HQ-Network virtual network and the Applications subnet

az network vnet create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --name HQ-Network --address-prefix 172.16.0.0/16 --subnet-name Applications --subnet-prefix 172.16.0.0/24

# add GatewaySubnet to HQ-Network

az network vnet subnet create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --address-prefix 172.16.255.0/27 --name GatewaySubnet --vnet-name HQ-Network

# create the LNG-Azure-VNet-1 local network gateway

az network local-gateway create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --gateway-ip-address 94.0.252.160 --name LNG-Azure-VNet-1 --local-address-prefixes 10.0.0.0/16

# Verify the topology

az network vnet list --output table

az network local-gateway list --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --output table

## Now we are ready to complete Site-to-site VPN gateway by creating the public IP address and VNET gateways and connections

# create the PIP-VNG-Azure-VNet-1 public IP address
az network public-ip create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --name PIP-VNG-Azure-VNet-1 --allocation-method Dynamic
# create the PIP-VNG-HQ-Network public IP address
az network public-ip create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --name PIP-VNG-HQ-Network --allocation-method Dynamic
# create the VNG-Azure-VNet-1 virtual network gateway (Takes 45 mins, so we use --no-wait parameter to run the next command)
az network vnet-gateway create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --name VNG-Azure-VNet-1 --public-ip-address PIP-VNG-Azure-VNet-1 --vnet Azure-VNet-1 --gateway-type Vpn --vpn-type RouteBased --sku VpnGw1 --no-wait
# create the VNG-HQ-Network virtual network gateway(on-prem simulation)
az network vnet-gateway create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --name VNG-HQ-Network --public-ip-address PIP-VNG-HQ-Network --vnet HQ-Network --gateway-type Vpn --vpn-type RouteBased --sku VpnGw1 --no-wait

# To monitor the progress
watch -d -n 5 az network vnet-gateway list \
    --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a \
    --output table

# Now update the remote gateway IPaddress referecnece that are defined in local network gateways only after bothe vnet-gateways are created

az network local-gateway update --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --name LNG-Azure-VNet-1 --gateway-ip-address $PIPVNGAZUREVNET1 # Public IPaddr created above
az network local-gateway update --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a --name LNG-HQ-Network --gateway-ip-address $PIPVNGHQNETWORK

# Create the connection

SHAREDKEY=<shared key>
az network vpn-connection create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a \
    --name Azure-VNet-1-To-HQ-Network \
    --vnet-gateway1 VNG-Azure-VNet-1 \
    --shared-key $SHAREDKEY \
    --local-gateway2 LNG-HQ-Network

az network vpn-connection create --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a \
    --name HQ-Network-To-Azure-VNet-1  \
    --vnet-gateway1 VNG-HQ-Network \
    --shared-key $SHAREDKEY \
    --local-gateway2 LNG-Azure-VNet-1

# Let's confirm that the VPN tunnels are connected.

az network vpn-connection show --resource-group learn-f93518d8-7a14-416f-8617-c6764ee39a5a \
    --name Azure-VNet-1-To-HQ-Network  \
    --output table \
    --query '{Name:name,ConnectionStatus:connectionStatus}'


